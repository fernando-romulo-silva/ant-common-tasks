<?xml version="1.0" encoding="UTF-8"?>
<project name="maven-build-macrodef" xmlns:if="ant:if" xmlns:unless="ant:unless">

	<description>
		Macrodefs for maven builds commands.
    </description>

	<import file="../../confs/maven-conf.xml" />

	<!--|###########################################################################################################################|-->
	<!--|#################################### BUILD DESCRIPTIONS ###################################################################|-->
	<!--|###########################################################################################################################|-->

	<property name="build.download.lib.description" value="build-download-libs - Download all project's libs.${line.separator}
	Examples :${line.separator}
	- Manual Input${line.separator}
		ant build-download-lib${line.separator}
	- Batch Mode${line.separator}
		ant build-download-lib -Dbatch=true" />

	<property name="build.download.plugin.description" value="build-download-plugins - Download all project's plugins.${line.separator}
	Examples :${line.separator}
	- Manual Input${line.separator}
		ant build-download-plugin${line.separator}
	- Batch Mode${line.separator}
		ant build-download-plugin -Dbatch=true" />

	<property name="build.download.source.description" value="build-download-source - Download all project's libs source.${line.separator}
	Examples :${line.separator}
	- Manual Input${line.separator}
		ant build-download-source${line.separator}
	- Batch Mode${line.separator}
		ant build-download-source -Dbatch=true" />

	<property name="build.clean.description" value="build-clean - Clean the project's artifacts.${line.separator}
		Examples :${line.separator}
		- Manual Input${line.separator}
			ant build-clean${line.separator}
		- Batch Mode${line.separator}
			ant build-clean -Dbatch=true${line.separator}
			ant build-clean -Dbatch=true -Dprofile=dev${line.separator}
		- If there are modules:${line.separator}
		    ant build-clean -Dbatch=true -Dmodules-specified={module-maven} -Dmodules-dependents={boolean} -Dmodules-dependencies={boolean}" />

	<property name="build.compile.description" value="build-compile - Compile the project's classes.${line.separator}
		Examples :${line.separator}
		- Manual Input${line.separator}
			ant build-compile${line.separator}
		- Batch Mode${line.separator}
			ant build-compile -Dbatch=true${line.separator}
			ant build-compile -Dbatch=true -Dprofile=dev${line.separator}
		- If there are modules:${line.separator}
		    ant build-compile -Dbatch=true -Dmodules-specified={module-maven} -Dmodules-dependents={boolean} -Dmodules-dependencies={boolean}" />

	<property name="build.package.description" value="build-package - Create packages (JAR, WAR, EAR, APK, etc) of project WITH tests, check code, and documentation.${line.separator}
		Examples :${line.separator}
		- Manual Input${line.separator}
			ant build-package${line.separator}
		- Batch Mode${line.separator}
			ant build-package -Dbatch=true${line.separator}
			ant build-package -Dbatch=true -Dprofile=dev${line.separator}
		- If there are modules:${line.separator}
		    ant build-package -Dbatch=true -Dmodules-specified={module-maven} -Dmodules-dependents={boolean} -Dmodules-dependencies={boolean}" />

	<property name="build.package.simple.description" value="build-package-simple - Create packages of project WITHOUT tests, check code, and documentation.${line.separator}
		Examples :${line.separator}
		- Manual Input${line.separator}
			ant build-package-simple${line.separator}
		- Batch Mode${line.separator}
			ant build-package-simple -Dbatch=true${line.separator}
			ant build-package-simple -Dbatch=true -Dprofile=dev${line.separator}
		- If there are modules:${line.separator}
		    ant build-package-simple -Dbatch=true -Dmodules-specified={module-maven} -Dmodules-dependents={boolean} -Dmodules-dependencies={boolean}" />

	<property name="build.install.description" value="build-install - Create packages and put it in the local repository WITH tests, check code, and documentation.${line.separator}
		Examples :${line.separator}
		- Manual Input${line.separator}
			ant build-install${line.separator}
		- Batch Mode${line.separator}
			ant build-install -Dbatch=true${line.separator}
			ant build-install -Dbatch=true -Dprofile=dev${line.separator}
		- If there are modules:${line.separator}
		    ant build-install -Dbatch=true -Dmodules-specified={module-maven} -Dmodules-dependents={boolean} -Dmodules-dependencies={boolean}" />

	<property name="build.install.simple.description" value="build-install-simple - Create package and put project in the local repository WITHOUT tests, check code, and documentation.${line.separator}
		Examples :${line.separator}
		- Manual Input${line.separator}
			ant build-install-simple${line.separator}
		- Batch Mode${line.separator}
			ant build-install-simple -Dbatch=true${line.separator}
			ant build-install-simple -Dbatch=true -Dprofile=dev${line.separator}
		- If there are modules:${line.separator}
		    ant build-install-simple -Dbatch=true -Dmodules-specified={module-maven} -Dmodules-dependents={boolean} -Dmodules-dependencies={boolean}" />

	<!--|###########################################################################################################################|-->
	<!--|#################################### BUILD DEFAUL #########################################################################|-->
	<!--|###########################################################################################################################|-->

	<!--|##############################################################################|-->
	<!--| macrodef: build-update                   									   |-->
	<!--|##############################################################################|-->
	<macrodef name="build-download">
		<attribute name="modules-specified" default="" description="${modules.specified.description}" />
		<attribute name="modules-dependencies" default="true" description="${modules.dependencies.description}" />
		<attribute name="modules-dependents" default="true" description="${modules.dependents.description}" />

		<attribute name="libs" default="true" description="Download project's libs" />
		<attribute name="plugins" default="false" description="Download project's plugins" />
		<attribute name="sources" default="false" description="Download project's libs sources" />
		<attribute name="javadoc" default="false" description="Download project's libs docs" />

		<sequential>

			<!-- Messages -->
			<property name="build-download-msgi" value="Getting the all ${pom.project.artifactId}'s libs, plugins, sources, and javadoc" />
			<property name="build-download-msgf" value="The ${pom.project.artifactId} artifacts was successfully downloaded" />

			<!-- Execute -->
			<exec-maven initial-msg="${build-download-msgi}" final-msg="${build-download-msgf}" offline="false" update-snapshots="true" modules-specified="@{modules-specified}" modules-dependents="@{modules-dependents}" modules-dependencies="@{modules-dependencies}">
				<arg-elements>
					<arg line="dependency:resolve" if:true="@{libs}" />
					<arg line="dependency:resolve-plugins" if:true="@{plugins}" />
					<arg line="dependency:sources" if:true="@{sources}" />
					<arg line="dependency:resolve -Dclassifier=javadoc" if:true="@{javadoc}" />
					<arg line="--update-snapshots" />
				</arg-elements>
			</exec-maven>

		</sequential>
	</macrodef>

	<!--|##############################################################################|-->
	<!--| macrodef: build-purge                   									   |-->
	<!--|##############################################################################|-->
	<macrodef name="build-purge">
		<sequential>
			<!--https://maven.apache.org/plugins/maven-dependency-plugin/examples/purging-local-repository.html -->

			<!-- Messages -->
			<property name="build-purge-msgi" value="Cleaning the maven repository" />
			<property name="build-purge-msgf" value="The maven repository was successfully cleaned" />

			<!-- Execute -->
			<exec-maven offline="true" initial-msg="${build-purge-msgi}" final-msg="${build-purge-msgf}">
				<arg-elements>
					<arg line="dependency:purge-local-repository" />
					<arg line="-DactTransitively=false" />
				</arg-elements>
			</exec-maven>

		</sequential>
	</macrodef>

	<!--|##############################################################################|-->
	<!--| macrodef: build-clean                   									   |-->
	<!--|##############################################################################|-->
	<macrodef name="build-clean" description="${build.clean.description}">
		<attribute name="profile" default="" description="${profile.description}" />
		<attribute name="modules-specified" default="" description="${modules.specified.description}" />
		<attribute name="modules-dependencies" default="true" description="${modules.dependencies.description}" />
		<attribute name="modules-dependents" default="true" description="${modules.dependents.description}" />

		<sequential>
			<!-- Messages -->
			<property name="build-clean-msgi" value="Cleaning the ${pom.project.artifactId}'s artifacts in target folder" />
			<property name="build-clean-msgf" value="The ${pom.project.artifactId} was successfully cleaned" />

			<!-- Execute -->
			<exec-maven initial-msg="${build-clean-msgi}" final-msg="${build-clean-msgf}" modules-specified="@{modules-specified}" modules-dependencies="@{modules-dependencies}" modules-dependents="@{modules-dependents}">
				<arg-elements>
					<arg line="clean" />
				</arg-elements>
			</exec-maven>

		</sequential>
	</macrodef>

	<!--|##############################################################################|-->
	<!--| macrodef: build-compile          									           |-->
	<!--|##############################################################################|-->
	<macrodef name="build-compile" description="${build.compile.description}">
		<attribute name="profile" default="" description="${profile.description}" />
		<attribute name="modules-specified" default="" description="${modules.specified.description}" />
		<attribute name="modules-dependencies" default="true" description="${modules.dependencies.description}" />
		<attribute name="modules-dependents" default="true" description="${modules.dependents.description}" />

		<sequential>
			<!-- Messages -->
			<property name="build-compile-msgi" value="Compiling the ${pom.project.artifactId}'s classes" />
			<property name="build-compile-msgf" value="The ${pom.project.artifactId} was successfully compiled" />

			<!-- Execute -->
			<exec-maven initial-msg="${build-compile-msgi}" final-msg="${build-compile-msgf}" profile="@{profile}" modules-specified="@{modules-specified}" modules-dependencies="@{modules-dependencies}" modules-dependents="@{modules-dependents}">
				<arg-elements>
					<arg line="compile" />
				</arg-elements>
			</exec-maven>

		</sequential>
	</macrodef>

	<!--|##############################################################################|-->
	<!--| macrodef: build-package                  									   |-->
	<!--|##############################################################################|-->
	<macrodef name="build-package" description="${build.package.description}">
		<attribute name="profile" default="" description="${profile.description}" />
		<attribute name="modules-specified" default="" description="${modules.specified.description}" />
		<attribute name="modules-dependencies" default="true" description="${modules.dependencies.description}" />
		<attribute name="modules-dependents" default="true" description="${modules.dependents.description}" />

		<sequential>
			<!-- Messages -->
			<property name="build-package-msgi" value="Packing ${pom.project.artifactId} WITH tests, check code, and documentation" />
			<property name="build-package-msgf" value="The ${pom.project.artifactId} was successfully packaged" />

			<!-- Execute -->
			<exec-maven initial-msg="${build-package-msgi}" final-msg="${build-package-msgf}" profile="@{profile}" modules-specified="@{modules-specified}" modules-dependencies="@{modules-dependencies}" modules-dependents="@{modules-dependents}">
				<arg-elements>
					<arg line="package" />
				</arg-elements>
			</exec-maven>

		</sequential>
	</macrodef>

	<!--|##############################################################################|-->
	<!--| macrodef: build-package-simple           									   |-->
	<!--|##############################################################################|-->
	<macrodef name="build-package-simple" description="${build.package.simple.description}">
		<attribute name="profile" default="" description="${profile.description}" />
		<attribute name="modules-specified" default="" description="${modules.specified.description}" />
		<attribute name="modules-dependencies" default="true" description="${modules.dependencies.description}" />
		<attribute name="modules-dependents" default="true" description="${modules.dependents.description}" />

		<sequential>
			<!-- Messages -->
			<property name="build-package-simple-msgi" value="Packing the project WITHOUT tests, check code, and documentation" />
			<property name="build-package-simple-msgf" value="The ${pom.project.artifactId} was successfully packaged" />

			<!-- Execute -->
			<exec-maven initial-msg="${build-package-simple-msgi}" final-msg="${build-package-simple-msgf}" profile="@{profile}" modules-specified="@{modules-specified}" modules-dependencies="@{modules-dependencies}" modules-dependents="@{modules-dependents}">
				<arg-elements>
					<arg line="-Dmaven.source.skip=true" />
					<arg line="-Dmaven.javadoc.skip=true" />
								
					<arg line="-Dpmd.failOnViolation=false" />
					<arg line="-Dcpd.failOnViolation=false" />
					<arg line="-Dspotbugs.failOnError=false" />
					<arg line="-Djacoco.haltOnFailure=false" />
					<arg line="-Dcheckstyle.failOnViolation=false" />					
										
					<arg line="-DskipTests=true" />
					<arg line="package" />
				</arg-elements>
			</exec-maven>

		</sequential>
	</macrodef>

	<!--|##############################################################################|-->
	<!--| macrodef: build-install                 									   |-->
	<!--|##############################################################################|-->
	<macrodef name="build-install" description="${build.install.description}">
		<attribute name="profile" default="" description="${profile.description}" />
		<attribute name="modules-specified" default="" description="${modules.specified.description}" />
		<attribute name="modules-dependencies" default="true" description="${modules.dependencies.description}" />
		<attribute name="modules-dependents" default="true" description="${modules.dependents.description}" />

		<sequential>
			<!-- Messages -->
			<property name="build-install-msgi" value="Installing ${pom.project.artifactId} project in the local repository WITH tests, check code, and documentation" />
			<property name="build-install-msgf" value="The ${pom.project.artifactId} was successfully installed" />

			<!-- Execute -->
			<exec-maven initial-msg="${build-install-msgi}" final-msg="${build-install-msgf}" profile="@{profile}" modules-specified="@{modules-specified}" modules-dependencies="@{modules-dependencies}" modules-dependents="@{modules-dependents}">
				<arg-elements>
					<arg line="install" />
				</arg-elements>
			</exec-maven>

		</sequential>
	</macrodef>

	<!--|##############################################################################|-->
	<!--| macrodef: build-install-simple           									   |-->
	<!--|##############################################################################|-->
	<macrodef name="build-install-simple" description="${build.install.simple.description}">
		<attribute name="profile" default="" description="${profile.description}" />
		<attribute name="modules-specified" default="" description="${modules.specified.description}" />
		<attribute name="modules-dependencies" default="true" description="${modules.dependencies.description}" />
		<attribute name="modules-dependents" default="true" description="${modules.dependents.description}" />

		<sequential>
			<!-- Messages -->
			<property name="build-install-simple-msgi" value="Installing ${pom.project.artifactId} in the local repository WITHOUT tests, check code, and documentation" />
			<property name="build-install-simple-msgf" value="The ${pom.project.artifactId} was successfully installed" />

			<!-- Execute -->
			<exec-maven initial-msg="${build-install-simple-msgi}" final-msg="${build-install-simple-msgf}" profile="@{profile}" modules-specified="@{modules-specified}" modules-dependencies="@{modules-dependencies}" modules-dependents="@{modules-dependents}">
				<arg-elements>
					<arg line="-Dmaven.source.skip=true" />
					<arg line="-Dmaven.javadoc.skip=true" />
					
					<arg line="-Dpmd.failOnViolation=false" />
					<arg line="-Dcpd.failOnViolation=false" />
					<arg line="-Dspotbugs.failOnError=false" />
					<arg line="-Djacoco.haltOnFailure=false" />
					<arg line="-Dcheckstyle.failOnViolation=false" />
					
					<arg line="-DskipTests=true" />
					<arg line="install" />
				</arg-elements>
			</exec-maven>

		</sequential>
	</macrodef>

</project>